Day 1

Mandatory exercise - everyone MUST complete it.
1.Create a new workspace for web java
2. Create new java project & add JDBC connector(mysql connector) in the build path.
- Java Project -> Next -> Libraries -> ClassPath -> Add External Jar -> Browse & select "day1_data\day1_help\jdbc help\jdbc drivers\mysql-connector-j-9.3.0.jar"
- Finish
It should show you , a Referenced Library 
- under package explorer.

3. Revise JDBC steps

4 create database 
 - iacsd_25

5. Create DBUtils class
 - add public static method to create & return Connection.
 - add db URL , username & password 

6. Write a Tester class & test it.

7. Refer to -
"day1_data\day1_help\jdbc help\sql\healthcare sql.txt"
Copy tables 
 - doctors & patients
- Copy DML.

7. As discussed ,
7.1 Write Java application to display all doctors details
7.2 Write Java application to display all patients details


Core Java topics revision - 

8. import day1.1 in your new work space (web java work space)
Revise
8.1 Synchronization 
 - with synchronized methods & blocks.
Code from package - threads7 , threads9

9. Revise ITC
 - deadlocks , wait & notify
Code from package - itc_with_sleep, itc_with_wait_notify

10. Revise
- cloning_shallow_copy
- cloning_deep_copy

11. Refer 
 - "day1_data\day1_help\core java help\reflection\Java Reflection summary.txt"
Code - test_reflection


Day 2
1. MANDATORY work

1.1 Download & Extract Apache Tomcat Web server 
- "web java prerequisites\Web Server n Jakarta EE docs\apache-tomcat-10.1.26.7z"
- Save it under Study Materials | Software folder 
- Add tomcat server to web java STS 4 workspace.

How ? 

Steps
1. Change the perspective to Java EE
 Window -> Perspective -> Change Perspective -> Other -> Java EE
2. Choose Servers
 - It will show you - NO servers
3. Click on the link
 - Choose Apache vendor & select Apache Tomcat 10.1
4. Next -> Browse & Choose Tomcat Installation directory (Tomcat Home)
5. Confirm JRE - JDK 21
6. Finish
7. Choose Apache Tomcat & start it. 
8. Launch Server console & see if Tomcat is up & running.
9. Create a dynamic web project ,to deploy monolithic web app (server side will render the view :HTTP  response content type : text/html)
From top left corner , drop down list 
- choose Dynamic web project
- Enter project name(eg - day2_web_lab)
- Next -> Next
- select web.xml -> Finish

10. Check from package explorer 
- you will see dynamic web project - day2_web_lab
Refer to - "dynamic web project folder structure.png"

11. Open & edit web.xml , with welcome file list.
11. Add index.html under <webapp> folder : welcome page (home page) with welcome message

12. Start Server side application
Right click on web project -> Run as -> Servler side app -> choose server -> finish
You can check the server console.

IDE will automatically a chrome (default web browser) & send a request to the web application.

eg : 
Request URL - http://localhost:8080/day2_web
response  : index.html will be rendered.


2. No need to import day2.1 
 - It was created without layers.

3. Directly import day2.2
 - Edit MySql connecto JAR classpath
 - Edit DB password , in DBUtils
 - Revise CRUD functionality with layers.

4. Mandatory assignment

4.1 Patient sign in
i/p - email , password
o/p - Patient details (via Patient POJO ) or error message.

4.2 Display patient details born between start date & end date
i/p - start date , end date
o/p - List of patient details

4.3 Delete Patient Details
i/p - patient id 
o/p - a message (success | failure)

4.4 Interesting work (Optional !)
Book an appointment
i/p - doctor_id, patient_id, appointment_datetime
o/p - a message (booking successful or failed)

